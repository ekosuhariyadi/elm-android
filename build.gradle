group 'com.codangcoding'
version '1.0-0'

buildscript {

    ext {
        kotlin_version = '1.1.60'
        rxjava2_version = '2.1.6'
        rxrelay_version = '2.0.0'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'kotlin'

ext {
    bintrayRepo = 'open-source-projects'
    bintrayName = 'elm-android'

    publishedGroupId = 'com.codangcoding'
    libraryName = 'elm-android'
    artifact = 'elm-android'

    libraryDescription = 'Bring The Elm Architecture to Android Development'

    siteUrl = 'https://github.com/ekosuhariyadi/elm-android'
    gitUrl = 'https://github.com/ekosuhariyadi/elm-android.git'

    libraryVersion = '1.0-0'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxrelay_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}